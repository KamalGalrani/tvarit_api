version: 2

jobs:
  tests-3.7: &test-template
    working_directory: ~/tvarit_api
    docker:
      - image: circleci/python:3.7
        environment:
          PIPENV_VENV_IN_PROJECT: true
          PYTHON_VER: python3.7
    steps:
      - checkout  # checkout source code to working directory
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: py-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
            pipenv install --dev
      - run: pipenv run coverage run --source tvarit_api -m xmlrunner test.test_tvarit test.api.test_team -o test-reports
      - run: pipenv run codecov
      - save_cache:
          key: py-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  tests-3.6:
    <<: *test-template
    docker:
      - image: circleci/python:3.6

  tests-2.7:
    <<: *test-template
    docker:
      - image: circleci/python:2.7

  build:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: "Install dependencies"
          command: |
            sudo pip install pipenv
            pipenv install
      - run:
          name: "Build package"
          command: |
            mkdir -p ./dist/
            echo $(git describe --abbrev=0 --tags) > ./dist/VERSION
            pipenv run python setup.py sdist
            pipenv run python setup.py bdist_wheel
      - persist_to_workspace:
          root: .
          paths:
            - dist

workflows:
  version: 2
  main:
    jobs:
      - tests-3.7
      - tests-3.6
      - tests-2.7
      - build
